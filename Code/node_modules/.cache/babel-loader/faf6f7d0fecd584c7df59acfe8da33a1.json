{"ast":null,"code":"import _classCallCheck from \"/Users/angelo.falci/Desktop/Projects/Corso React/Code/react-foundamentals/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/angelo.falci/Desktop/Projects/Corso React/Code/react-foundamentals/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/angelo.falci/Desktop/Projects/Corso React/Code/react-foundamentals/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/angelo.falci/Desktop/Projects/Corso React/Code/react-foundamentals/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/angelo.falci/Desktop/Projects/Corso React/Code/react-foundamentals/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/angelo.falci/Desktop/Projects/Corso React/Code/react-foundamentals/src/Game/Game.jsx\";\nimport React from 'react';\nimport './Game.css';\nimport { Cell } from '../Cell/Cell';\n\nfunction range(n) {\n  return Array.from({\n    length: n\n  }, function (_, i) {\n    return i;\n  });\n}\n\nexport var Game =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n\n    _this.handleonUnmask = function (a, b) {\n      //Usando questa tipologia di arrow function this non perde il contesto (da ES2018)\n      _this.setState({\n        grid: _this.state.grid.map(function (row, x) {\n          if (a !== x) return row;\n          return row.map(function (mine, y) {\n            if (b !== y) return mine;\n            return {\n              isMasked: false\n            };\n          });\n        })\n      });\n    };\n\n    _this.state = {\n      grid: _this.makeGrid(_this.props.rows, _this.props.cols)\n    };\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"makeGrid\",\n    value: function makeGrid(rows, cols) {\n      var grid = range(rows).map(function (x) {\n        return range(cols).map(function (y) {\n          return {\n            isMasked: 1\n          };\n        });\n      });\n      return grid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid\",\n        style: {\n          gridTemplateColumns: \"repeat(\".concat(this.props.cols, \", 4rem)\"),\n          gridTemplateRows: \"repeat(\".concat(this.props.rows, \", 4rem)\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.state.grid.map(function (row, x) {\n        return row.map(function (mine, y) {\n          return React.createElement(Cell, {\n            mine: mine,\n            onUnmask: function onUnmask() {\n              return _this2.handleonUnmask(x, y);\n            },\n            key: \"\".concat(x, \"-\").concat(y),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          });\n        });\n      })));\n    }\n  }]);\n\n  return Game;\n}(React.Component);","map":{"version":3,"sources":["/Users/angelo.falci/Desktop/Projects/Corso React/Code/react-foundamentals/src/Game/Game.jsx"],"names":["React","Cell","range","n","Array","from","length","_","i","Game","props","handleonUnmask","a","b","setState","grid","state","map","row","x","mine","y","isMasked","makeGrid","rows","cols","console","log","gridTemplateColumns","gridTemplateRows","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,IAAT,QAAqB,cAArB;;AAEA,SAASC,KAAT,CAAeC,CAAf,EAAiB;AACf,SAAOC,KAAK,CAACC,IAAN,CAAW;AAACC,IAAAA,MAAM,EAAEH;AAAT,GAAX,EAAwB,UAACI,CAAD,EAAIC,CAAJ;AAAA,WAAUA,CAAV;AAAA,GAAxB,CAAP;AACD;;AAED,WAAaC,IAAb;AAAA;AAAA;AAAA;;AACE,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8EAAMA,KAAN;;AADgB,UAgBlBC,cAhBkB,GAgBD,UAACC,CAAD,EAAIC,CAAJ,EAAS;AAAE;AAC1B,YAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE,MAAKC,KAAL,CAAWD,IAAX,CAAgBE,GAAhB,CAAoB,UAACC,GAAD,EAAKC,CAAL,EAAW;AACnC,cAAGP,CAAC,KAAGO,CAAP,EAAU,OAAOD,GAAP;AACV,iBAAOA,GAAG,CAACD,GAAJ,CAAQ,UAACG,IAAD,EAAMC,CAAN,EAAU;AACzB,gBAAGR,CAAC,KAAGQ,CAAP,EAAU,OAAOD,IAAP;AACV,mBAAO;AAACE,cAAAA,QAAQ,EAAC;AAAV,aAAP;AACD,WAHQ,CAAP;AAGC,SALG;AADM,OAAd;AASD,KA1BiB;;AAEhB,UAAKN,KAAL,GAAa;AACXD,MAAAA,IAAI,EAAE,MAAKQ,QAAL,CAAc,MAAKb,KAAL,CAAWc,IAAzB,EAA+B,MAAKd,KAAL,CAAWe,IAA1C;AADK,KAAb;AAFgB;AAMjB;;AAPH;AAAA;AAAA,6BASWD,IATX,EASiBC,IATjB,EASsB;AAClB,UAAMV,IAAI,GAAGb,KAAK,CAACsB,IAAD,CAAL,CAAYP,GAAZ,CAAiB,UAAAE,CAAC;AAAA,eAC7BjB,KAAK,CAACuB,IAAD,CAAL,CAAYR,GAAZ,CAAiB,UAAAI,CAAC;AAAA,iBACjB;AAACC,YAAAA,QAAQ,EAAE;AAAX,WADiB;AAAA,SAAlB,CAD6B;AAAA,OAAlB,CAAb;AAIA,aAAOP,IAAP;AACD;AAfH;AAAA;AAAA,6BA6BW;AAAA;;AACTW,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAjB;AAEE,aACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAE;AAC3BkB,UAAAA,mBAAmB,mBAAY,KAAKlB,KAAL,CAAWe,IAAvB,YADQ;AAE3BI,UAAAA,gBAAgB,mBAAY,KAAKnB,KAAL,CAAWc,IAAvB;AAFW,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,KAAKR,KAAL,CAAWD,IAAX,CAAgBE,GAAhB,CAAoB,UAACC,GAAD,EAAKC,CAAL,EAAU;AAC7B,eAAOD,GAAG,CAACD,GAAJ,CAAQ,UAACG,IAAD,EAAMC,CAAN,EAAU;AACvB,iBAAO,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAED,IAAZ;AAAkB,YAAA,QAAQ,EAAE;AAAA,qBAAI,MAAI,CAACT,cAAL,CAAoBQ,CAApB,EAAsBE,CAAtB,CAAJ;AAAA,aAA5B;AAA0D,YAAA,GAAG,YAAKF,CAAL,cAAUE,CAAV,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,SAFM,CAAP;AAGD,OAJA,CAJH,CADF,CADA;AAcD;AA9CH;;AAAA;AAAA,EAA0BrB,KAAK,CAAC8B,SAAhC","sourcesContent":["import React from 'react'\nimport './Game.css'\nimport { Cell } from '../Cell/Cell';\n\nfunction range(n){\n  return Array.from({length: n}, (_, i) => i);\n}\n\nexport class Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      grid: this.makeGrid(this.props.rows, this.props.cols)\n    }\n    \n  }\n\n  makeGrid(rows, cols){\n    const grid = range(rows).map( x =>\n      range(cols).map( y =>\n      ({isMasked: 1}),\n      ));\n    return grid;\n  }\n\n  handleonUnmask = (a, b) =>{ //Usando questa tipologia di arrow function this non perde il contesto (da ES2018)\n    this.setState({\n      grid: this.state.grid.map((row,x) => {\n        if(a!==x) return row;\n        return row.map((mine,y)=>{\n        if(b!==y) return mine;\n        return {isMasked:false}\n      })},\n    ),\n    });\n  }\n\n  render() {\n  console.log(this.props);\n    \n    return (\n    <div className=\"game\">\n      <div className=\"grid\" style={{\n        gridTemplateColumns: `repeat(${this.props.cols}, 4rem)`,\n        gridTemplateRows: `repeat(${this.props.rows}, 4rem)`\n      }}>\n        {this.state.grid.map((row,x) =>{\n          return row.map((mine,y)=>{\n            return <Cell mine={mine} onUnmask={()=>this.handleonUnmask(x,y)} key={`${x}-${y}`}/>\n          })\n        })}\n      </div>\n    </div>\n    );\n  }\n  \n\n}"]},"metadata":{},"sourceType":"module"}